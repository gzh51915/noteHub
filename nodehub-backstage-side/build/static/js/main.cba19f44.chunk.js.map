{"version":3,"sources":["components/Frame/logo.png","utils/request.js","utils/auth.js","pages/Login.js","services/auth.js","services/products.js","pages/admin/dashboard/index.js","pages/admin/products/List.js","pages/admin/products/upload.js","pages/admin/products/Edit.js","pages/admin/question/esList.js","pages/admin/question/esEdit.js","pages/admin/user/Edit.js","pages/admin/user/List.js","pages/PageNotFound.js","routes/index.js","components/Frame/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","timeout","get","url","params","post","data","defaults","headers","localStorage","getItem","interceptors","request","use","config","error","response","Promise","reject","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","props","title","className","name","initialValues","remember","onFinish","values","user","console","log","username","password","then","res","token","status","message","success","setItem","history","push","info","catch","err","onFinishFailed","errorInfo","Item","label","rules","required","Password","valuePropName","type","htmlType","listApi","page","delApi","id","UserApi","questionApi","delquestionApi","index","charts","createRef","chart","chartx","chartt","rex","ret","answer","dataname","result","forEach","element","nickname","pv","pvonclick","pvname","answerer","agree","questionTitle","agname","echarts","init","this","current","setOption","text","xAxis","yAxis","series","lineStyle","normal","color","tooltip","trigger","axisPointer","backgroundColor","legend","grid","left","right","bottom","containLabel","boundaryGap","stack","areaStyle","show","position","style","width","height","ref","float","Component","List","state","dataSource","delapi","getList","a","resule","list","setState","columns","key","align","render","txt","recode","dataIndex","item","src","img","record","titile","size","onCancel","onConfirm","margin","extra","onClick","rowKey","onRow","event","bordered","Avatar","beforeUpload","file","isJpgOrPng","suffix","split","handleChange","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","imageUrl","getImg","loading","handleRemove","uploadButton","LoadingOutlined","PlusOutlined","listType","showUploadList","onChange","alt","React","withRouter","useState","setimgUrl","suffi","setsuffix","imgUrl","createApi","msg","pathname","placeholder","shape","esEdit","FromList","Edit","ModalText","visible","confirmLoading","showModal","handleOk","setTimeout","handleCancel","onOk","getUser","fixed","icon","scroll","x","y","PageNotFound","mainRoutes","path","component","adminRoutes","Index","isShow","exact","AreaChartOutlined","DatabaseFilled","esList","AuditOutlined","Consumer","SmileOutlined","Header","Layout","Content","Sider","routes","filter","route","menu","p","removeItem","target","rel","logo","overlay","marginRight","e","preventDefault","href","DownOutlined","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","map","padding","minHeight","children","App","routeProps","to","from","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cba19f44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.63d17010.png\";","import axios from 'axios'\r\nimport { getToken } from './auth';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'http://182.92.241.251:4000/api',\r\n    timeout:5000,\r\n})\r\n\r\ninstance.defaults.headers['token'] =  getToken();\r\n// instance.defaults.headers.common[\"Content-Type\"] =   'application/x-www-form-urlencoded' \r\n// instance.defaults.headers.common[\"Access-Control-Allow-Headers\"] =   'Authorization'\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n      // config.\r\n    // 在发送请求之前做些什么\r\n    // config.headers[\"Content-Type\"] = 'application/x-www-form-urlencoded'\r\n    // config.headers[\"token\"] = getToken();\r\n    // axios.defaults.headers[\"token\"] =  getToken();\r\n    //console.log(config)\r\n    return config;\r\n  }, function (error) {\r\n    // 对请求错误做些什么\r\n  });\r\n\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n    // 对响应数据做点什么\r\n    return response;\r\n  }, function (error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  });\r\n\r\nexport function get(url,params){\r\n    return instance.get(url,{\r\n        params\r\n    })\r\n}\r\nexport function post(url,data){\r\n  return instance.post(url,data)\r\n}\r\n\r\nexport function put(url,data){\r\n    return instance.put(url,data)\r\n}\r\n\r\nexport function del(url,data){\r\n    return instance.delete(url,data)\r\n}","export function getToken(){\r\n    return localStorage.getItem('token')\r\n}\r\n\r\nexport function setToken(token){\r\n    localStorage.setItem('token',token)\r\n}\r\n\r\nexport function clearToken(){\r\n    localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function isLogined(){\r\n    if(localStorage.getItem(\"token\")){\r\n        return true;\r\n    }\r\n    return false;\r\n    \r\n}","import React from 'react'\r\nimport { Form, Input, Button, Checkbox, Card, message } from 'antd';\r\nimport {setToken} from '../utils/auth'\r\nimport \"./login.css\";\r\nimport {loginApi} from '../services/auth';\r\n\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n  \r\n  const Login = (props) => {\r\n    const onFinish = values => {\r\n      console.log('Success:', values);\r\n      // setToken(values.username);\r\n      // props.history.push(\"/admin\");\r\n      \r\n      loginApi({\r\n        username: values.username,\r\n        password: values.password\r\n      }).then(res =>{\r\n        if(res.data.status === 200){\r\n          message.success(\"登录成功\")\r\n          console.log('=================',res.data);\r\n          \r\n          setToken(res.data.data.token);\r\n          props.history.push(\"/admin\");\r\n        }else{\r\n          message.info(res.message)\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch(err =>{\r\n        console.log(err);\r\n        message.error('用户不存在');\r\n      })\r\n    };\r\n  \r\n    const onFinishFailed = errorInfo => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n  \r\n    return (\r\n    <Card title=\"noteHub Admin SYS\" className=\"login-form\">\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"账号\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入你的用户名!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n  \r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入你的密码!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n  \r\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n          <Checkbox>记住账号</Checkbox>\r\n        </Form.Item>\r\n  \r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            登录\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </Card>\r\n    );\r\n  };\r\nexport default Login\r\n","import {post} from '../utils/request'\r\n\r\n// export function loginApi(user){\r\n//     return post(\"/api/v1/auth/manager_login\",user);\r\n// }\r\n\r\nexport function loginApi(user){\r\n    return post(\"/admin/login\",user);\r\n}","import {get,post,put} from '../utils/request';\r\n\r\nexport function listApi(page=1){\r\n    return get(\"/getSubareaData\",{page});\r\n}\r\nexport function createApi(title,imgUrl,suffix){\r\n    return post(`/admin/addSubarea`,{title,imgUrl,suffix});\r\n}\r\n\r\nexport function modifyOne(id,data){\r\n    return get(`/getSubareaData/${id}`,data);\r\n}\r\n\r\nexport function delApi(id,data){\r\n    return get(`/admin/removeSubarea?id=${id}`);\r\n}\r\nexport function UserApi(page=1){\r\n    return get(\"/admin/getAllUsers\",{page});\r\n}\r\nexport function UserdelApi(id,data){\r\n    return get(`/admin/removeUser?id=${id}`);\r\n}\r\nexport function ChartsoneAPI(){\r\n    return get(\"/admin/userAnswerTop20\");\r\n}\r\n\r\nexport function ChartstwoAPI(){\r\n    return get(\"/admin/subareaImagesTop20\");\r\n}\r\nexport function ChartsthreeAPI(){\r\n    return get(\"/admin/goodAnswerTop20\");\r\n}\r\n\r\nexport function questionApi(page=1){\r\n    return get(\"/getQuestions\",{page});\r\n}\r\nexport function delquestionApi(id,data){\r\n    return get(`/admin/removeQuestions?id=${id}`);\r\n}","import React, { Component ,createRef} from 'react'\r\nimport echarts from 'echarts'\r\nimport {ChartsoneAPI,ChartstwoAPI,ChartsthreeAPI} from '../../../services/products.js'\r\n\r\nexport default class index extends Component {\r\n    constructor(){\r\n        super()\r\n        this.charts = createRef();\r\n        this.chart = createRef();\r\n        this.chartx = createRef();\r\n        this.chartt = createRef();\r\n    }\r\n    async componentDidMount(){\r\n        // let arr = [],\r\n        let res = await ChartsoneAPI()\r\n        let rex = await ChartstwoAPI()\r\n        let ret = await ChartsthreeAPI()\r\n\r\n        let data = []\r\n        let answer = []\r\n        let dataname = res.data.data.result\r\n        dataname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            data.push(element.nickname)\r\n        });\r\n        console.log(ret);\r\n        \r\n        // for(var key in dataname){\r\n        //     console.log(dataname[key]+\"\\n\")  \r\n        //   }\r\n        dataname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            answer.push(element.answer)\r\n        });\r\n        \r\n        let pv =[]\r\n        let pvonclick =[]\r\n        let pvname = rex.data.data.result\r\n        console.log(pvname);\r\n        pvname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            pv.push(element.title)      \r\n        });\r\n        pvname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            pvonclick.push(element.pv)      \r\n        });\r\n\r\n        let answerer =[]\r\n        let agree =[]\r\n        let questionTitle =[]\r\n        let agname = ret.data.data.result\r\n        agname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            answerer.push(element.answerer)      \r\n        });\r\n        agname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            agree.push(element.agree)      \r\n        });\r\n        agname.forEach(element => {\r\n            // console.log(element.nickname)\r\n            questionTitle.push(element.questionTitle)     \r\n        });\r\n        console.log(questionTitle);\r\n        var myChart = echarts.init(this.charts.current);\r\n        myChart.setOption({\r\n            title: {\r\n                text: '分区点击量TOP10'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: pv\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: pvonclick,\r\n                type: 'line',\r\n                lineStyle:{\r\n                    normal:{\r\n                        color:'#4169E1'\r\n                    }\r\n                }\r\n            },]\r\n        });\r\n        var myChart = echarts.init(this.chart.current);\r\n        myChart.setOption({\r\n            title: {\r\n                text: '主要分区访问量'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: '#6a7985'\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                data: ['数码', '校园', '动漫', '亲子', '游戏']\r\n            },\r\n            // toolbox: {\r\n            //     feature: {\r\n            //         saveAsImage: {}\r\n            //     }\r\n            // },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    boundaryGap: false,\r\n                    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value'\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '数码',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    areaStyle: {},\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        }\r\n                    },\r\n                    data: [120, 132, 101, 134, 90, 230, 210]\r\n                },\r\n                {\r\n                    name: '校园',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    areaStyle: {},\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        }\r\n                    },\r\n                    data: [220, 182, 191, 234, 290, 330, 310]\r\n                },\r\n                {\r\n                    name: '动漫',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    areaStyle: {},\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        }\r\n                    },\r\n                    data: [150, 232, 201, 154, 190, 330, 410]\r\n                },\r\n                {\r\n                    name: '亲子',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    areaStyle: {},\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        }\r\n                    },\r\n                    data: [320, 332, 301, 334, 390, 330, 320]\r\n                },\r\n                {\r\n                    name: '游戏',\r\n                    type: 'line',\r\n                    stack: '总量',\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        }\r\n                    },\r\n                    areaStyle: {},\r\n                    data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n                }\r\n            ]\r\n        });\r\n        var myChart = echarts.init(this.chartt.current);\r\n        myChart.setOption({\r\n            title: {\r\n                text: '用户回答数量top10',\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'shadow'\r\n                }\r\n            },\r\n            legend: {\r\n                data: ['2020年']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, 0.01]\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data: data,\r\n            },\r\n            series: [\r\n                {\r\n                    name: '2020年',\r\n                    type: 'bar',\r\n                    data: answer,\r\n                },\r\n                // {\r\n                //     name: '2012年',\r\n                //     type: 'bar',\r\n                //     data: [19325, 23438, 31000, 121594, 134141, 681807]\r\n                // }\r\n            ]\r\n        });\r\n        var myChart = echarts.init(this.chartx.current);\r\n        myChart.setOption({\r\n            title: {\r\n                text: '好评回答top10',\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'shadow'\r\n                }\r\n            },\r\n            legend: {\r\n                data: ['2020年']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, 0.01]\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data: answerer,\r\n            },\r\n            series: [\r\n                {\r\n                    name: questionTitle,\r\n                    type: 'bar',\r\n                    data: agree,\r\n                },\r\n                // {\r\n                //     name: '2012年',\r\n                //     type: 'bar',\r\n                //     data: [19325, 23438, 31000, 121594, 134141, 681807]\r\n                // }\r\n            ]\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{width:\"100%\",height:\"100%\"}}>\r\n                <div ref={this.chartt} style={{width:\"750px\" ,height:\"400px\",float:\"left\"}}></div> \r\n                <div ref={this.charts} style={{width:\"750px\" ,height:\"400px\",float:\"left\"}}></div>\r\n                <div ref={this.chart} style={{width:\"750px\" ,height:\"400px\",float:\"left\"}}></div> \r\n                <div ref={this.chartx} style={{width:\"750px\" ,height:\"400px\",float:\"left\"}}></div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Button, Popconfirm, message } from 'antd'\r\nimport { listApi, delApi } from '../../../services/products'\r\nimport { Avatar } from 'antd';\r\n\r\nexport default class List extends Component {\r\n\r\n    state = ({\r\n        dataSource: []\r\n    })\r\n\r\n    delapi = (id) => {\r\n        delApi(id.id).then(res => {\r\n            console.log(id);\r\n            \r\n            if (res.data.status === 200) {\r\n                this.getList()\r\n            } else {\r\n                message.error(\"删除失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n    getList = async () => {\r\n        const resule = await listApi()\r\n        const dataSource = resule.data.data.list\r\n        this.setState({\r\n            dataSource\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getList()\r\n    }\r\n    render() {\r\n\r\n        const { dataSource } = this.state\r\n\r\n        const columns = [{\r\n            title: '序号',\r\n            key: \"_id\",\r\n            width: 80,\r\n            align: 'center',\r\n            render: (txt, recode, index) => index + 1\r\n        }, {\r\n            title: '分类名字',\r\n            dataIndex: \"title\"\r\n        }, {\r\n            title: '图片',\r\n            render: (item) => {\r\n                return (\r\n                    <div>\r\n                        <Avatar src={item.img} />\r\n                    </div>\r\n                )\r\n            }\r\n        }, {\r\n            title: '操作',\r\n            render: (txt, record, index, titile) => {\r\n                return (\r\n                    <div>\r\n                        <Button type=\"primary\" size=\"small\">修改</Button>\r\n                        <Popconfirm title=\"确认删除?\" onCancel={() => console.log('取消')}\r\n                            onConfirm={() => {\r\n                                this.delapi(record)\r\n                            }}>\r\n                            <Button style={{ margin: \"0 1rem\" }} type=\"danger\" size=\"small\">删除</Button>\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }]\r\n\r\n        return (\r\n            <Card title=\"分类列表管理\" extra={\r\n                <Button type=\"primary\" size=\"small\" onClick={() => { this.props.history.push('/admin/products/edit') }}>\r\n                    新增\r\n            </Button>}>\r\n                <Table rowKey=\"_id\"\r\n                    onRow={(record) => {\r\n                        return {\r\n                            onClick: event => {\r\n                                // console.log(record,titile);\r\n                            }, // 点击行\r\n                        };\r\n                    }}\r\n                    columns={columns} bordered dataSource={dataSource} />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Upload, message, Button } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n        return callback(reader.result)\r\n    });\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\n\r\n\r\n\r\nclass Avatar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            imageUrl: null,\r\n            suffix:''\r\n        }\r\n    }\r\n    // 判断文件类型\r\n    beforeUpload=(file)=> {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        const suffix = (file.type.split(\"/\")[1]);\r\n        \r\n        this.setState({\r\n            suffix\r\n        })\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 5;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 5MB!');\r\n        }\r\n        return file\r\n    }\r\n\r\n\r\n    handleChange = info => {\r\n        // console.log(beforeUpload());\r\n        getBase64(info.file.originFileObj, imageUrl => {\r\n            const {suffix}=this.state\r\n            // console.log(suffix);\r\n            this.props.getImg(imageUrl,suffix)\r\n            // console.log(imageUrl);\r\n            return this.setState({\r\n                imageUrl,\r\n                loading: false,\r\n            })\r\n        }\r\n        );\r\n    };\r\n    handleRemove = () => {\r\n        this.setState({\r\n            imageUrl: null\r\n        })\r\n    }\r\n    // handleUpload =async () => {\r\n    //     const {imageUrl} = this.state\r\n    //     // if (!imageUrl) return message.error('请选择图片');\r\n    //     console.log('触发了=======');\r\n    //     console.log(this.props)\r\n        \r\n    // }\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={this.beforeUpload}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                    {imageUrl ? <Button onClick={this.handleRemove}>移除图片</Button> : \"\"}\r\n                </Upload>\r\n\r\n\r\n                {/* <Button onClick={this.handleUpload}>上传</Button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Avatar","import React, { useState } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Form, Input, Button, Card, message } from 'antd';\r\nimport { createApi } from '../../../services/products';\r\nimport Avatar from './upload'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst onFinishFailed = errorInfo => {\r\n    message.error(\"请输入正确的内容\")\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n\r\n\r\nconst Edit = (props) => {\r\n    const [img,setimgUrl] =useState('')\r\n    const [suffi,setsuffix] =useState('')\r\n\r\n    // const ref = useRef(Avatar)\r\n\r\n    // console.log(value);\r\n    // const cur = new ref.current()\r\n    // console.log(cur);\r\n    var onFinish = values => {\r\n        // console.log('Success:', values);\r\n        const { title } = values\r\n        const result=getImg()\r\n        \r\n        createApi(title, img, suffi).then(res => {\r\n            //  console.log(imgUrl, suffix);\r\n            // // getList() \r\n           const data = res.data\r\n            console.log(data)\r\n            if(data.status !== 200) return message.error(data.msg,2)\r\n             message.success(data.msg,2)\r\n            //  window.location.href = 'http://localhost:3000/#/admin/products'\r\n            // console.log(props)\r\n            props.history.push({\r\n                pathname:'/admin/products'\r\n            })\r\n        })\r\n    };\r\n    var getImg = (data, suffix) => {\r\n        let imgUrl = data\r\n        // console.log(e.target);\r\n        // console.log(imgUrl,suffix)\r\n        // return { imgUrl, suffix }\r\n        setimgUrl(imgUrl)\r\n        setsuffix(suffix)\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Card title=\"分类列表编辑\">\r\n            <Form\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}>\r\n                <Form.Item name='title' label=\"title\" rules={[{\r\n                    required: true,\r\n                    message: '类别的标题必须输入'\r\n                }]}>\r\n                    <Input placeholder=\"请输入类别的标题\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Avatar getImg={getImg} />\r\n                </Form.Item>\r\n\r\n                <Form.Item >\r\n                    <Button htmlType=\"submit\" type=\"primary\" >保存</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withRouter(Edit)\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Button, Popconfirm, message } from 'antd'\r\nimport { delquestionApi, delApi,questionApi} from '../../../services/products'\r\nimport { Avatar } from 'antd';\r\n\r\nexport default class List extends Component {\r\n\r\n    state = ({\r\n        dataSource: []\r\n    })\r\n\r\n    delapi = (id) => {\r\n        delquestionApi(id.id).then(res => {\r\n            console.log(id);\r\n            \r\n            if (res.data.status === 200) {\r\n                this.getList()\r\n            } else {\r\n                message.error(\"删除失败\")\r\n            }\r\n        })\r\n    }\r\n\r\n    getList = async () => {\r\n        const resule = await questionApi()\r\n        const dataSource = resule.data.data.list\r\n        this.setState({\r\n            dataSource\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getList()\r\n    }\r\n    render() {\r\n\r\n        const { dataSource } = this.state\r\n\r\n        const columns = [{\r\n            title: '序号',\r\n            key: \"_id\",\r\n            width: 80,\r\n            align: 'center',\r\n            render: (txt, recode, index) => index + 1\r\n        }, {\r\n            title: '问题标题',\r\n            dataIndex: \"title\"\r\n        },{\r\n            title: '问题作者',\r\n            dataIndex: \"questioner\"\r\n        }, {\r\n            title: '图片',\r\n            render: (item) => {\r\n                return (\r\n                    <div>\r\n                        <Avatar src={item.img} shape=\"square\" size={64} />\r\n                    </div>\r\n                )\r\n            }\r\n        }, {\r\n            title: '操作',\r\n            render: (txt, record, index, titile) => {\r\n                return (\r\n                    <div>\r\n                        <Button type=\"primary\" size=\"small\">修改</Button>\r\n                        <Popconfirm title=\"确认删除?\" onCancel={() => console.log('取消')}\r\n                            onConfirm={() => {\r\n                                this.delapi(record)\r\n                            }}>\r\n                            <Button style={{ margin: \"0 1rem\" }} type=\"danger\" size=\"small\">删除</Button>\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }]\r\n\r\n        return (\r\n            <Card title=\"问答列表管理\" >\r\n                <Table rowKey=\"_id\"\r\n                    onRow={(record) => {\r\n                        return {\r\n                            onClick: event => {\r\n                                // console.log(record,titile);\r\n                            }, // 点击行\r\n                        };\r\n                    }}\r\n                    columns={columns} bordered dataSource={dataSource} />\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport const esEdit = () => {\r\n    return (\r\n        <div>\r\n            编辑\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default esEdit\r\n","import { Modal, Button ,Form, Input, Popconfirm} from 'antd';\r\nimport React from 'react';\r\nimport { UserdelApi } from '../../../services/products'\r\n\r\n        //样式\r\n        const layout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 16 },\r\n          };\r\n          \r\n          const FromList = () => {\r\n              //\t提交表单且数据验证成功后回调事件\r\n            const onFinish = values => {\r\n              console.log('Success:', values);\r\n            };\r\n             // 提交表单且数据验证失败后回调事件\t\r\n            const onFinishFailed = errorInfo => {\r\n              console.log('Failed:', errorInfo);\r\n            };\r\n          \r\n            return (\r\n                <Form\r\n                  {...layout}\r\n                  name=\"basic\"\r\n                  initialValues={{ remember: true }}\r\n                  onFinish={onFinish}\r\n                  onFinishFailed={onFinishFailed}\r\n                >\r\n                  <Form.Item\r\n                    label=\"昵称\"\r\n                    name=\"nickname\"\r\n                    rules={[{ required: true, message: '请输入!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n            \r\n                  <Form.Item\r\n                    label=\"用户ID\"\r\n                    name=\"id\"\r\n                    rules={[{ required: true, message:  '请输入!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                \r\n                  <Form.Item\r\n                    label=\"提问数\"\r\n                    name=\"questions\"\r\n                    rules={[{ required: true, message:  '请输入!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"回答数\"\r\n                    name=\"answer\"\r\n                    rules={[{ required: true, message:  '请输入!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"icon\"\r\n                    name=\"money\"\r\n                    rules={[{ required: true, message:  '请输入!' }]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Form>\r\n              );\r\n        }\r\nclass Edit extends React.Component {\r\n\r\n\r\n  state = {\r\n    ModalText: <FromList/>,\r\n    visible: false,\r\n    confirmLoading: false,\r\n  };\r\n\r\n  \r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  //点击确认\r\n  handleOk = () => {\r\n    this.setState({\r\n      ModalText: '正在修改',\r\n      //气泡属性\r\n      confirmLoading: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false,\r\n      });\r\n    }, 2000);\r\n  };\r\n  //删除\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render( record) {\r\n   \r\n    const { visible, confirmLoading, ModalText } = this.state;\r\n    return (\r\n      <div>\r\n        <Button style={{margin:\"1 1rem\"}} type=\"primary\" onClick={this.showModal} size=\"small\">\r\n          编辑\r\n        </Button>\r\n        \r\n        <Modal\r\n          title=\"用户管理\"\r\n          visible={visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n            {/*在修改框里的内容*/}\r\n          <p>{ModalText}</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit","import React, { Component }  from 'react'\r\nimport { Table ,Button,Popconfirm,message} from 'antd';\r\nimport Edit from './Edit'\r\nimport { Avatar } from 'antd';\r\nimport { UserApi } from '../../../services/products'\r\nimport { UserdelApi } from '../../../services/products'\r\nexport default class List extends Component {\r\n\r\n  state=({\r\n      dataSource:[] \r\n  })\r\n\r\n\r\n  getUser=async()=>{\r\n    const resule=await UserApi()\r\n    console.log(resule.data.data.list);\r\n    const dataSource=resule.data.data.list\r\n    \r\n    this.setState({\r\n        dataSource\r\n    })\r\n  }\r\n\r\n\r\n   componentDidMount(){\r\n      this.getUser()\r\n    }\r\nrender() {  \r\nconst columns = [\r\n  {\r\n    title: '昵称',\r\n    width: 100,\r\n    dataIndex: 'nickname',\r\n    key: 'nickname',\r\n    fixed: 'left',\r\n  },\r\n  {\r\n    title: '用户ID',\r\n    width: 100,\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    fixed: 'left',\r\n  },\r\n  {\r\n    title: '提问数',\r\n    dataIndex: 'questions',\r\n    key: '1',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: '回答数',\r\n    dataIndex: 'answer',\r\n    key: '2',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: '头像',\r\n    width: 150,\r\n    render:(item)=>{\r\n      return (\r\n          <div>\r\n              <Avatar src={item.icon}/>\r\n          </div>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    title: '用户名',\r\n    dataIndex: 'username',\r\n    key: '5',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: '用户状态',\r\n    key: 'operation',\r\n    fixed: 'right',\r\n    width: 100,\r\n    render: (record) => (\r\n      <span>\r\n    <Edit record={record}/>\r\n    <Popconfirm title=\"确认删除?\" onCancel={()=>console.log('取消')}  \r\n                        onConfirm={()=>{ \r\n                            UserdelApi(record.id).then(res => {\r\n                              console.log(res.data.status);\r\n                              \r\n                              if (res.data.status === 200) {\r\n                                this.getUser()\r\n                              } else {\r\n                                  message.error(\"删除失败\")\r\n                              }\r\n                          })\r\n                            }}>\r\n                        <Button style={{margin:\"1rem 0rem\"}} type=\"danger\" size=\"small\">删除</Button>\r\n                        </Popconfirm>\r\n    </span>\r\n    ),\r\n  },\r\n];\r\n\r\nconst {dataSource} =this.state\r\n  // for (let i = 0; i < 20; i++) {\r\n  //   data.push({\r\n  //     key: i,\r\n  //     name: `Edrward ${i}`,\r\n  //     age: 32,\r\n  //     address: `London Park no. ${i}`,\r\n  //   });\r\n  // }\r\n      return(\r\n        <Table columns={columns} dataSource={dataSource} scroll={{ x: 1500, y: 600 }} rowKey=\"_id\"/>\r\n      )\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import React from 'react'\r\nimport Login from \"../pages/Login\";\r\nimport Index from \"../pages/admin/dashboard/index\";\r\nimport List from \"../pages/admin/products/List\";\r\nimport Edit from \"../pages/admin/products/Edit\";\r\nimport esList from \"../pages/admin/question/esList\";\r\nimport esEdit from \"../pages/admin/question/esEdit\";\r\nimport Consumer from \"../pages/admin/user/List\";\r\nimport PageNotFound from \"../pages/PageNotFound\";\r\nimport { AreaChartOutlined,DatabaseFilled,AuditOutlined,SmileOutlined} from '@ant-design/icons';\r\n\r\nexport const mainRoutes = [{\r\n    path:'/login',\r\n    component:Login\r\n},{\r\n    path:'/404',\r\n    component:PageNotFound\r\n}]\r\n\r\nexport const adminRoutes = [{\r\n    path:'/admin/dashboard',\r\n    component:Index,\r\n    isShow:true,\r\n    title:'看板',\r\n    exact:true,\r\n    icon:<AreaChartOutlined />\r\n\r\n},{\r\n    path:'/admin/products',\r\n    component:List,\r\n    isShow:true,\r\n    exact:true,\r\n    title:'分类列表管理',\r\n    icon:<DatabaseFilled />\r\n},{\r\n    path:'/admin/products/edit/:id?',\r\n    component:Edit,\r\n    isShow:false,\r\n    exact:true\r\n},{\r\n    path:'/admin/essay',\r\n    component:esList,\r\n    isShow:true,\r\n    exact:true,\r\n    title:'问答列表管理',\r\n    icon:<AuditOutlined />\r\n},{\r\n    path:'/admin/essay/edit/:id?',\r\n    component:esEdit,\r\n    isShow:false,\r\n},{\r\n    path:'/admin/user/',\r\n    component:Consumer,\r\n    isShow:true,\r\n    exact:true,\r\n    title:'用户管理界面',\r\n    icon:<SmileOutlined />\r\n}\r\n]","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Layout, Menu, Breadcrumb,Dropdown,Avatar, message} from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport logo from './logo.png'\r\nimport {clearToken} from '../../utils/auth'\r\nimport {adminRoutes} from '../../routes'\r\nimport './index.css'\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nconst routes = adminRoutes.filter(route=>route.isShow)\r\n\r\nfunction index(props) {\r\n  const menu = (\r\n    <Menu onClick={(p)=>{\r\n      if(p.key === 'logOut'){\r\n        clearToken()\r\n        props.history.push('/login')\r\n      }else{\r\n        message.info(p.key)\r\n      }\r\n    }}>\r\n      <Menu.Item key=\"logOut\" >\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" >\r\n          退出\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n    return (\r\n        <Layout>\r\n        <Header className=\"header\" style={{backgroundColor:'black'}}>\r\n          <div className=\"logo\">\r\n              <img src={logo} alt=\"logo\"/>\r\n          </div>\r\n          \r\n          <Dropdown overlay={menu}>\r\n            <div>\r\n            <Avatar style={{marginRight:10}} src=\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1592217214363&di=9deae26182fc73a2eb0f12a0765a7dc8&imgtype=0&src=http%3A%2F%2Fpic.51yuansu.com%2Fpic3%2Fcover%2F03%2F44%2F03%2F5ba2569c9b98c_610.jpg\"></Avatar>\r\n            <a className=\"ant-dropdown-link\" onClick={e=>e.preventDefault()}  href=\"https://ant.design/index-cn\" style={{color:'#fff'}}>\r\n                后台管理员 <DownOutlined />\r\n            </a>\r\n            </div>\r\n          </Dropdown>\r\n        </Header>\r\n        <Layout>\r\n          <Sider width={200} className=\"site-layout-background\">\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={['1']}\r\n              defaultOpenKeys={['sub1']}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n                {\r\n                    routes.map(route=>{\r\n                    return(<Menu.Item key={route.path} onClick={p=>props.history.push(p.key)} icon={route.icon}>{route.title}</Menu.Item>)\r\n                    })\r\n                }\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: '16px' }}>\r\n            {/* <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>List</Breadcrumb.Item>\r\n              <Breadcrumb.Item>App</Breadcrumb.Item>\r\n            </Breadcrumb> */}\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              {props.children}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(index) \r\n","import React from 'react';\nimport {Switch,Route,Redirect} from 'react-router-dom';\nimport {adminRoutes} from './routes'\nimport Frame from './components/Frame/index'\nimport {isLogined} from './utils/auth'\nimport './App.css';\n\nfunction App() {\n  return isLogined() ? (\n    <Frame>\n      <Switch>\n        {adminRoutes.map(route=>{\n          return (\n          <Route key={route.path} \n            path={route.path} \n            exact={route.exact} \n            render={routeProps => {\n              return <route.component{...routeProps}/>\n            }}\n          />\n          );\n        })}\n        <Redirect to={adminRoutes[0].path} from=\"/admin\"/>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Frame>\n  ):<Redirect to=\"/login\"/>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Switch,Route,Redirect} from 'react-router-dom'\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport App from './App';\nimport {mainRoutes} from './routes'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/admin\" render={routeProps=><App{...routeProps}/>} />\n      {mainRoutes.map(route=>{\n        return <Route key={route.path} {...route} />\n      })}\n      <Redirect to=\"/admin\" from=\"/\"/>\n      <Redirect to=\"/404\"/>\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}